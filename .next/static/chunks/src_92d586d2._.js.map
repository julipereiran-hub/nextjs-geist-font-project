{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;MAxBS;AA0BT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/pricing/PricingForm.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\n\ninterface Supply {\n  id: string;\n  name: string;\n  quantity: string;\n  unitCost: string;\n  unit: string;\n}\n\ninterface SavedProduct {\n  id: string;\n  name: string;\n  description: string;\n  supplies: Supply[];\n  laborHours: string;\n  hourlyRate: string;\n  suppliesCost: number;\n  laborCost: number;\n  totalCost: number;\n  margin: string;\n  finalPrice: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface SavedSupply {\n  id: string;\n  name: string;\n  unit: string;\n  unitCost: string;\n  category?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nfunction PricingForm() {\n  // States for supplies and labor\n  const [supplies, setSupplies] = useState<Supply[]>([]);\n  const [laborHours, setLaborHours] = useState(\"\");\n  const [hourlyRate, setHourlyRate] = useState(\"\");\n  \n  // States for final pricing\n  const [manualCost, setManualCost] = useState(\"\");\n  const [useCalculatedCost, setUseCalculatedCost] = useState(true);\n  const [margin, setMargin] = useState(\"\");\n  const [price, setPrice] = useState<number | null>(null);\n  const [error, setError] = useState(\"\");\n  \n  // Calculated costs\n  const [suppliesCost, setSuppliesCost] = useState(0);\n  const [laborCost, setLaborCost] = useState(0);\n  const [totalCalculatedCost, setTotalCalculatedCost] = useState(0);\n\n  // States for saving products\n  const [savedProducts, setSavedProducts] = useState<SavedProduct[]>([]);\n  const [productName, setProductName] = useState(\"\");\n  const [productDescription, setProductDescription] = useState(\"\");\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n  const [currentEditingProduct, setCurrentEditingProduct] = useState<string | null>(null);\n\n  // States for saving supplies\n  const [savedSupplies, setSavedSupplies] = useState<SavedSupply[]>([]);\n  const [showSupplyDialog, setShowSupplyDialog] = useState(false);\n  const [supplyName, setSupplyName] = useState(\"\");\n  const [supplyUnit, setSupplyUnit] = useState(\"\");\n  const [supplyUnitCost, setSupplyUnitCost] = useState(\"\");\n  const [supplyCategory, setSupplyCategory] = useState(\"\");\n  const [searchSupply, setSearchSupply] = useState(\"\");\n  const [showSupplySearch, setShowSupplySearch] = useState(false);\n\n  // Load saved products and supplies from localStorage on component mount\n  useEffect(() => {\n    const savedProductsData = localStorage.getItem('savedProducts');\n    if (savedProductsData) {\n      try {\n        setSavedProducts(JSON.parse(savedProductsData));\n      } catch (error) {\n        console.error('Error loading saved products:', error);\n      }\n    }\n\n    const savedSuppliesData = localStorage.getItem('savedSupplies');\n    if (savedSuppliesData) {\n      try {\n        setSavedSupplies(JSON.parse(savedSuppliesData));\n      } catch (error) {\n        console.error('Error loading saved supplies:', error);\n      }\n    }\n  }, []);\n\n  // Calculate costs whenever supplies or labor change\n  useEffect(() => {\n    const suppliesTotal = supplies.reduce((total, supply) => {\n      const quantity = parseFloat(supply.quantity) || 0;\n      const unitCost = parseFloat(supply.unitCost) || 0;\n      return total + (quantity * unitCost);\n    }, 0);\n    \n    const laborTotal = (parseFloat(laborHours) || 0) * (parseFloat(hourlyRate) || 0);\n    const totalCost = suppliesTotal + laborTotal;\n    \n    setSuppliesCost(suppliesTotal);\n    setLaborCost(laborTotal);\n    setTotalCalculatedCost(totalCost);\n  }, [supplies, laborHours, hourlyRate]);\n\n  // Save products to localStorage\n  const saveToLocalStorage = (products: SavedProduct[]) => {\n    try {\n      localStorage.setItem('savedProducts', JSON.stringify(products));\n    } catch (error) {\n      console.error('Error saving products:', error);\n    }\n  };\n\n  // Add new supply\n  const addSupply = () => {\n    const newSupply: Supply = {\n      id: Date.now().toString(),\n      name: \"\",\n      quantity: \"\",\n      unitCost: \"\",\n      unit: \"un\"\n    };\n    setSupplies([...supplies, newSupply]);\n  };\n\n  // Update supply\n  const updateSupply = (id: string, field: keyof Supply, value: string) => {\n    setSupplies(supplies.map(supply => \n      supply.id === id ? { ...supply, [field]: value } : supply\n    ));\n  };\n\n  // Remove supply\n  const removeSupply = (id: string) => {\n    setSupplies(supplies.filter(supply => supply.id !== id));\n  };\n\n  // Save current product\n  const saveProduct = () => {\n    if (!productName.trim()) {\n      setError(\"Por favor, insira um nome para o produto.\");\n      return;\n    }\n\n    const now = new Date().toISOString();\n    const productData: SavedProduct = {\n      id: currentEditingProduct || Date.now().toString(),\n      name: productName.trim(),\n      description: productDescription.trim(),\n      supplies: supplies,\n      laborHours,\n      hourlyRate,\n      suppliesCost,\n      laborCost,\n      totalCost: totalCalculatedCost,\n      margin,\n      finalPrice: price || 0,\n      createdAt: currentEditingProduct ? \n        savedProducts.find(p => p.id === currentEditingProduct)?.createdAt || now : now,\n      updatedAt: now\n    };\n\n    let updatedProducts;\n    if (currentEditingProduct) {\n      updatedProducts = savedProducts.map(p => \n        p.id === currentEditingProduct ? productData : p\n      );\n    } else {\n      updatedProducts = [...savedProducts, productData];\n    }\n\n    setSavedProducts(updatedProducts);\n    saveToLocalStorage(updatedProducts);\n    setShowSaveDialog(false);\n    setProductName(\"\");\n    setProductDescription(\"\");\n    setCurrentEditingProduct(null);\n    setError(\"\");\n  };\n\n  // Load product into calculator\n  const loadProduct = (product: SavedProduct) => {\n    setSupplies(product.supplies);\n    setLaborHours(product.laborHours);\n    setHourlyRate(product.hourlyRate);\n    setMargin(product.margin);\n    setPrice(product.finalPrice);\n    setUseCalculatedCost(true);\n    setCurrentEditingProduct(product.id);\n  };\n\n  // Delete product\n  const deleteProduct = (productId: string) => {\n    const updatedProducts = savedProducts.filter(p => p.id !== productId);\n    setSavedProducts(updatedProducts);\n    saveToLocalStorage(updatedProducts);\n    \n    if (currentEditingProduct === productId) {\n      setCurrentEditingProduct(null);\n    }\n  };\n\n  // Duplicate product\n  const duplicateProduct = (product: SavedProduct) => {\n    const duplicatedProduct: SavedProduct = {\n      ...product,\n      id: Date.now().toString(),\n      name: `${product.name} (Cópia)`,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n\n    const updatedProducts = [...savedProducts, duplicatedProduct];\n    setSavedProducts(updatedProducts);\n    saveToLocalStorage(updatedProducts);\n  };\n\n  // Save supplies to localStorage\n  const saveSupplesToLocalStorage = (supplies: SavedSupply[]) => {\n    try {\n      localStorage.setItem('savedSupplies', JSON.stringify(supplies));\n    } catch (error) {\n      console.error('Error saving supplies:', error);\n    }\n  };\n\n  // Save new supply\n  const saveSupply = () => {\n    if (!supplyName.trim()) {\n      setError(\"Por favor, insira um nome para o insumo.\");\n      return;\n    }\n\n    const now = new Date().toISOString();\n    const supplyData: SavedSupply = {\n      id: Date.now().toString(),\n      name: supplyName.trim(),\n      unit: supplyUnit.trim() || \"un\",\n      unitCost: supplyUnitCost,\n      category: supplyCategory.trim(),\n      createdAt: now,\n      updatedAt: now\n    };\n\n    const updatedSupplies = [...savedSupplies, supplyData];\n    setSavedSupplies(updatedSupplies);\n    saveSupplesToLocalStorage(updatedSupplies);\n    setShowSupplyDialog(false);\n    setSupplyName(\"\");\n    setSupplyUnit(\"\");\n    setSupplyUnitCost(\"\");\n    setSupplyCategory(\"\");\n    setError(\"\");\n  };\n\n  // Add saved supply to current supplies\n  const addSavedSupply = (savedSupply: SavedSupply, quantity: string = \"1\") => {\n    const newSupply: Supply = {\n      id: Date.now().toString(),\n      name: savedSupply.name,\n      quantity: quantity,\n      unitCost: savedSupply.unitCost,\n      unit: savedSupply.unit\n    };\n    setSupplies([...supplies, newSupply]);\n    setShowSupplySearch(false);\n    setSearchSupply(\"\");\n  };\n\n  // Delete saved supply\n  const deleteSavedSupply = (supplyId: string) => {\n    const updatedSupplies = savedSupplies.filter(s => s.id !== supplyId);\n    setSavedSupplies(updatedSupplies);\n    saveSupplesToLocalStorage(updatedSupplies);\n  };\n\n  // Filter supplies based on search\n  const filteredSupplies = savedSupplies.filter(supply =>\n    supply.name.toLowerCase().includes(searchSupply.toLowerCase()) ||\n    (supply.category && supply.category.toLowerCase().includes(searchSupply.toLowerCase()))\n  );\n\n  // Calculate final selling price\n  const handleCalculate = () => {\n    setError(\"\");\n    const costValue = useCalculatedCost ? totalCalculatedCost : parseFloat(manualCost);\n    const marginValue = parseFloat(margin);\n\n    // Validate numeric values\n    if (isNaN(costValue) || isNaN(marginValue)) {\n      setError(\"Por favor, insira valores numéricos válidos para custo e margem.\");\n      setPrice(null);\n      return;\n    }\n\n    if (costValue < 0 || marginValue < 0) {\n      setError(\"Os valores devem ser positivos.\");\n      setPrice(null);\n      return;\n    }\n\n    // Calculation: final price = cost * (1 + margin/100)\n    const calculatedPrice = costValue * (1 + marginValue / 100);\n    setPrice(calculatedPrice);\n  };\n\n  const handleReset = () => {\n    setSupplies([]);\n    setLaborHours(\"\");\n    setHourlyRate(\"\");\n    setManualCost(\"\");\n    setMargin(\"\");\n    setPrice(null);\n    setError(\"\");\n    setUseCalculatedCost(true);\n    setCurrentEditingProduct(null);\n    setProductName(\"\");\n    setProductDescription(\"\");\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Tabs defaultValue=\"cost-calculation\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"cost-calculation\">Cálculo de Custo</TabsTrigger>\n          <TabsTrigger value=\"final-pricing\">Precificação Final</TabsTrigger>\n          <TabsTrigger value=\"saved-products\">Produtos Salvos ({savedProducts.length})</TabsTrigger>\n          <TabsTrigger value=\"supply-library\">Biblioteca de Insumos ({savedSupplies.length})</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"cost-calculation\" className=\"space-y-6\">\n          {/* Supplies Section */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Insumos e Materiais</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {supplies.map((supply) => (\n                <div key={supply.id} className=\"grid grid-cols-12 gap-2 items-end\">\n                  <div className=\"col-span-4\">\n                    <Label className=\"text-xs\">Nome do Insumo</Label>\n                    <Input\n                      placeholder=\"Ex: Farinha\"\n                      value={supply.name}\n                      onChange={(e) => updateSupply(supply.id, \"name\", e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-span-2\">\n                    <Label className=\"text-xs\">Qtd</Label>\n                    <Input\n                      type=\"number\"\n                      step=\"0.01\"\n                      placeholder=\"1.5\"\n                      value={supply.quantity}\n                      onChange={(e) => updateSupply(supply.id, \"quantity\", e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-span-2\">\n                    <Label className=\"text-xs\">Unidade</Label>\n                    <Input\n                      placeholder=\"kg\"\n                      value={supply.unit}\n                      onChange={(e) => updateSupply(supply.id, \"unit\", e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-span-3\">\n                    <Label className=\"text-xs\">Custo Unit. (R$)</Label>\n                    <Input\n                      type=\"number\"\n                      step=\"0.01\"\n                      placeholder=\"5.00\"\n                      value={supply.unitCost}\n                      onChange={(e) => updateSupply(supply.id, \"unitCost\", e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-span-1\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => removeSupply(supply.id)}\n                      className=\"text-red-600 hover:text-red-700\"\n                    >\n                      ×\n                    </Button>\n                  </div>\n                </div>\n              ))}\n              \n              <div className=\"flex gap-2\">\n                <Button onClick={addSupply} variant=\"outline\" className=\"flex-1\">\n                  + Adicionar Insumo\n                </Button>\n                <Dialog open={showSupplySearch} onOpenChange={setShowSupplySearch}>\n                  <DialogTrigger asChild>\n                    <Button variant=\"outline\" className=\"flex-1\">\n                      🔍 Buscar Insumos Salvos\n                    </Button>\n                  </DialogTrigger>\n                  <DialogContent>\n                    <DialogHeader>\n                      <DialogTitle>Buscar Insumos Salvos</DialogTitle>\n                    </DialogHeader>\n                    <div className=\"space-y-4\">\n                      <Input\n                        placeholder=\"Pesquisar por nome ou categoria...\"\n                        value={searchSupply}\n                        onChange={(e) => setSearchSupply(e.target.value)}\n                      />\n                      \n                      {filteredSupplies.length === 0 ? (\n                        <div className=\"text-center text-muted-foreground py-4\">\n                          {searchSupply ? \"Nenhum insumo encontrado\" : \"Nenhum insumo salvo ainda\"}\n                        </div>\n                      ) : (\n                        <div className=\"max-h-60 overflow-y-auto space-y-2\">\n                          {filteredSupplies.map((supply) => (\n                            <div key={supply.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                              <div className=\"flex-1\">\n                                <div className=\"font-medium\">{supply.name}</div>\n                                <div className=\"text-sm text-muted-foreground\">\n                                  R$ {supply.unitCost}/{supply.unit}\n                                  {supply.category && ` • ${supply.category}`}\n                                </div>\n                              </div>\n                              <div className=\"flex gap-2\">\n                                <Input\n                                  type=\"number\"\n                                  placeholder=\"Qtd\"\n                                  className=\"w-20\"\n                                  id={`qty-${supply.id}`}\n                                  step=\"0.01\"\n                                />\n                                <Button\n                                  size=\"sm\"\n                                  onClick={() => {\n                                    const qtyInput = document.getElementById(`qty-${supply.id}`) as HTMLInputElement;\n                                    const quantity = qtyInput?.value || \"1\";\n                                    addSavedSupply(supply, quantity);\n                                  }}\n                                >\n                                  Adicionar\n                                </Button>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                  </DialogContent>\n                </Dialog>\n              </div>\n              \n              {supplies.length > 0 && (\n                <div className=\"text-right text-sm font-medium\">\n                  Total Insumos: R$ {suppliesCost.toFixed(2)}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Labor Section */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Mão de Obra</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"labor-hours\" className=\"text-sm font-medium\">\n                    Horas Trabalhadas\n                  </Label>\n                  <Input\n                    id=\"labor-hours\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    placeholder=\"Ex: 2.5\"\n                    value={laborHours}\n                    onChange={(e) => setLaborHours(e.target.value)}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"hourly-rate\" className=\"text-sm font-medium\">\n                    Valor por Hora (R$)\n                  </Label>\n                  <Input\n                    id=\"hourly-rate\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    placeholder=\"Ex: 25.00\"\n                    value={hourlyRate}\n                    onChange={(e) => setHourlyRate(e.target.value)}\n                  />\n                </div>\n              </div>\n              \n              {(laborHours || hourlyRate) && (\n                <div className=\"text-right text-sm font-medium\">\n                  Total Mão de Obra: R$ {laborCost.toFixed(2)}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Cost Summary */}\n          {(supplies.length > 0 || laborHours || hourlyRate) && (\n            <Card className=\"bg-blue-50 dark:bg-blue-950/20 border-blue-200 dark:border-blue-800\">\n              <CardContent className=\"pt-6\">\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Custo dos Insumos:</span>\n                    <span>R$ {suppliesCost.toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Custo da Mão de Obra:</span>\n                    <span>R$ {laborCost.toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between font-bold text-base border-t pt-2\">\n                    <span>Custo Total Calculado:</span>\n                    <span>R$ {totalCalculatedCost.toFixed(2)}</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"final-pricing\" className=\"space-y-6\">\n          {/* Cost Selection */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Custo do Produto</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"radio\"\n                    id=\"use-calculated\"\n                    checked={useCalculatedCost}\n                    onChange={() => setUseCalculatedCost(true)}\n                  />\n                  <Label htmlFor=\"use-calculated\" className=\"text-sm\">\n                    Usar custo calculado: R$ {totalCalculatedCost.toFixed(2)}\n                  </Label>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"radio\"\n                    id=\"use-manual\"\n                    checked={!useCalculatedCost}\n                    onChange={() => setUseCalculatedCost(false)}\n                  />\n                  <Label htmlFor=\"use-manual\" className=\"text-sm\">\n                    Inserir custo manualmente\n                  </Label>\n                </div>\n                \n                {!useCalculatedCost && (\n                  <Input\n                    type=\"number\"\n                    step=\"0.01\"\n                    placeholder=\"Ex: 50.00\"\n                    value={manualCost}\n                    onChange={(e) => setManualCost(e.target.value)}\n                    className=\"mt-2\"\n                  />\n                )}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Margin and Final Calculation */}\n          <div className=\"flex flex-col\">\n            <Label htmlFor=\"margin\" className=\"mb-2 text-sm font-medium\">\n              Margem de Lucro (%)\n            </Label>\n            <Input\n              id=\"margin\"\n              type=\"number\"\n              step=\"0.1\"\n              min=\"0\"\n              placeholder=\"Ex: 30\"\n              value={margin}\n              onChange={(e) => setMargin(e.target.value)}\n              aria-invalid={!!error}\n            />\n          </div>\n\n          {error && (\n            <div className=\"text-sm text-red-600 bg-red-50 dark:bg-red-950/20 p-3 rounded-md border border-red-200 dark:border-red-800\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"flex gap-3\">\n            <Button onClick={handleCalculate} className=\"flex-1\">\n              Calcular Preço de Venda\n            </Button>\n            <Dialog open={showSaveDialog} onOpenChange={setShowSaveDialog}>\n              <DialogTrigger asChild>\n                <Button variant=\"outline\" className=\"flex-1\" disabled={!price}>\n                  {currentEditingProduct ? \"Atualizar Produto\" : \"Salvar Produto\"}\n                </Button>\n              </DialogTrigger>\n              <DialogContent>\n                <DialogHeader>\n                  <DialogTitle>\n                    {currentEditingProduct ? \"Atualizar Produto\" : \"Salvar Produto\"}\n                  </DialogTitle>\n                </DialogHeader>\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"product-name\" className=\"text-sm font-medium\">\n                      Nome do Produto *\n                    </Label>\n                    <Input\n                      id=\"product-name\"\n                      placeholder=\"Ex: Bolo de Chocolate\"\n                      value={productName}\n                      onChange={(e) => setProductName(e.target.value)}\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"product-description\" className=\"text-sm font-medium\">\n                      Descrição (opcional)\n                    </Label>\n                    <Input\n                      id=\"product-description\"\n                      placeholder=\"Ex: Bolo de chocolate com cobertura\"\n                      value={productDescription}\n                      onChange={(e) => setProductDescription(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"flex gap-3\">\n                    <Button onClick={saveProduct} className=\"flex-1\">\n                      {currentEditingProduct ? \"Atualizar\" : \"Salvar\"}\n                    </Button>\n                    <Button \n                      variant=\"outline\" \n                      onClick={() => setShowSaveDialog(false)}\n                      className=\"flex-1\"\n                    >\n                      Cancelar\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Button onClick={handleReset} variant=\"outline\" className=\"flex-1\">\n              Limpar Tudo\n            </Button>\n          </div>\n\n          {price !== null && (\n            <div className=\"mt-6 rounded-lg border border-green-200 dark:border-green-800 p-4 bg-green-50 dark:bg-green-950/20\">\n              <div className=\"text-center\">\n                <span className=\"block text-sm font-medium text-green-800 dark:text-green-200 mb-1\">\n                  Preço de Venda Sugerido\n                </span>\n                <span className=\"block text-2xl font-bold text-green-900 dark:text-green-100\">\n                  R$ {price.toFixed(2)}\n                </span>\n                <div className=\"mt-3 text-xs text-green-700 dark:text-green-300 space-y-1\">\n                  <div>Custo: R$ {(useCalculatedCost ? totalCalculatedCost : parseFloat(manualCost) || 0).toFixed(2)}</div>\n                  <div>Margem: {parseFloat(margin || \"0\").toFixed(1)}%</div>\n                  <div>Lucro: R$ {(price - (useCalculatedCost ? totalCalculatedCost : parseFloat(manualCost) || 0)).toFixed(2)}</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"saved-products\" className=\"space-y-6\">\n          {savedProducts.length === 0 ? (\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center text-muted-foreground\">\n                  <p className=\"text-lg mb-2\">Nenhum produto salvo ainda</p>\n                  <p className=\"text-sm\">\n                    Calcule e salve seus produtos para reutilizar os cálculos depois\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className=\"grid gap-4\">\n              {savedProducts.map((product) => (\n                <Card key={product.id} className=\"relative\">\n                  <CardHeader>\n                    <div className=\"flex justify-between items-start\">\n                      <div>\n                        <CardTitle className=\"text-lg\">{product.name}</CardTitle>\n                        {product.description && (\n                          <p className=\"text-sm text-muted-foreground mt-1\">\n                            {product.description}\n                          </p>\n                        )}\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-lg font-bold text-green-600\">\n                          R$ {product.finalPrice.toFixed(2)}\n                        </div>\n                        <div className=\"text-xs text-muted-foreground\">\n                          Custo: R$ {product.totalCost.toFixed(2)}\n                        </div>\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                      <div>\n                        <strong>Insumos:</strong> {product.supplies.length} itens\n                        <div className=\"text-xs text-muted-foreground mt-1\">\n                          {product.supplies.slice(0, 2).map(s => s.name).join(\", \")}\n                          {product.supplies.length > 2 && \"...\"}\n                        </div>\n                      </div>\n                      <div>\n                        <strong>Mão de Obra:</strong> {product.laborHours}h\n                        <div className=\"text-xs text-muted-foreground mt-1\">\n                          R$ {product.hourlyRate}/hora\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex gap-2 mt-4\">\n                      <Button\n                        size=\"sm\"\n                        onClick={() => loadProduct(product)}\n                        className=\"flex-1\"\n                      >\n                        Carregar\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => duplicateProduct(product)}\n                        className=\"flex-1\"\n                      >\n                        Duplicar\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => deleteProduct(product.id)}\n                        className=\"text-red-600 hover:text-red-700\"\n                      >\n                        Excluir\n                      </Button>\n                    </div>\n                    \n                    <div className=\"text-xs text-muted-foreground mt-2 border-t pt-2\">\n                      Criado: {new Date(product.createdAt).toLocaleDateString('pt-BR')}\n                      {product.updatedAt !== product.createdAt && (\n                        <span> • Atualizado: {new Date(product.updatedAt).toLocaleDateString('pt-BR')}</span>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"supply-library\" className=\"space-y-6\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"text-lg font-semibold\">Biblioteca de Insumos</h3>\n            <Dialog open={showSupplyDialog} onOpenChange={setShowSupplyDialog}>\n              <DialogTrigger asChild>\n                <Button>+ Adicionar Insumo</Button>\n              </DialogTrigger>\n              <DialogContent>\n                <DialogHeader>\n                  <DialogTitle>Adicionar Novo Insumo</DialogTitle>\n                </DialogHeader>\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"supply-name\" className=\"text-sm font-medium\">\n                      Nome do Insumo *\n                    </Label>\n                    <Input\n                      id=\"supply-name\"\n                      placeholder=\"Ex: Farinha de Trigo\"\n                      value={supplyName}\n                      onChange={(e) => setSupplyName(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"supply-unit\" className=\"text-sm font-medium\">\n                        Unidade\n                      </Label>\n                      <Input\n                        id=\"supply-unit\"\n                        placeholder=\"Ex: kg\"\n                        value={supplyUnit}\n                        onChange={(e) => setSupplyUnit(e.target.value)}\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"supply-cost\" className=\"text-sm font-medium\">\n                        Custo Unitário (R$) *\n                      </Label>\n                      <Input\n                        id=\"supply-cost\"\n                        type=\"number\"\n                        step=\"0.01\"\n                        placeholder=\"Ex: 4.50\"\n                        value={supplyUnitCost}\n                        onChange={(e) => setSupplyUnitCost(e.target.value)}\n                      />\n                    </div>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"supply-category\" className=\"text-sm font-medium\">\n                      Categoria (opcional)\n                    </Label>\n                    <Input\n                      id=\"supply-category\"\n                      placeholder=\"Ex: Farinhas, Temperos, etc.\"\n                      value={supplyCategory}\n                      onChange={(e) => setSupplyCategory(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"flex gap-3\">\n                    <Button onClick={saveSupply} className=\"flex-1\">\n                      Salvar Insumo\n                    </Button>\n                    <Button \n                      variant=\"outline\" \n                      onClick={() => setShowSupplyDialog(false)}\n                      className=\"flex-1\"\n                    >\n                      Cancelar\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </div>\n\n          {savedSupplies.length === 0 ? (\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center text-muted-foreground\">\n                  <p className=\"text-lg mb-2\">Nenhum insumo salvo ainda</p>\n                  <p className=\"text-sm\">\n                    Adicione insumos à sua biblioteca para reutilizar em diferentes produtos\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className=\"grid gap-4\">\n              {savedSupplies.map((supply) => (\n                <Card key={supply.id}>\n                  <CardContent className=\"pt-4\">\n                    <div className=\"flex justify-between items-start\">\n                      <div className=\"flex-1\">\n                        <h4 className=\"font-semibold text-lg\">{supply.name}</h4>\n                        <div className=\"text-sm text-muted-foreground mt-1\">\n                          <span className=\"font-medium\">R$ {supply.unitCost}/{supply.unit}</span>\n                          {supply.category && (\n                            <span className=\"ml-2 px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-xs\">\n                              {supply.category}\n                            </span>\n                          )}\n                        </div>\n                        <div className=\"text-xs text-muted-foreground mt-2\">\n                          Criado: {new Date(supply.createdAt).toLocaleDateString('pt-BR')}\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => addSavedSupply(supply)}\n                        >\n                          Usar no Cálculo\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => deleteSavedSupply(supply.id)}\n                          className=\"text-red-600 hover:text-red-700\"\n                        >\n                          Excluir\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default PricingForm;\n"],"names":[],"mappings":"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","debugId":null}}]
}