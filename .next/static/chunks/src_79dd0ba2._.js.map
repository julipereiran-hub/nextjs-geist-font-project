{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/pricing/PricingForm.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\n\ninterface Supply {\n  id: string;\n  name: string;\n  quantity: string;\n  unitCost: string;\n  unit: string;\n}\n\ninterface SavedProduct {\n  id: string;\n  name: string;\n  description: string;\n  supplies: Supply[];\n  laborHours: string;\n  hourlyRate: string;\n  suppliesCost: number;\n  laborCost: number;\n  totalCost: number;\n  margin: string;\n  finalPrice: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nfunction PricingForm() {\n  // States for supplies and labor\n  const [supplies, setSupplies] = useState<Supply[]>([]);\n  const [laborHours, setLaborHours] = useState(\"\");\n  const [hourlyRate, setHourlyRate] = useState(\"\");\n  \n  // States for final pricing\n  const [manualCost, setManualCost] = useState(\"\");\n  const [useCalculatedCost, setUseCalculatedCost] = useState(true);\n  const [margin, setMargin] = useState(\"\");\n  const [price, setPrice] = useState<number | null>(null);\n  const [error, setError] = useState(\"\");\n  \n  // Calculated costs\n  const [suppliesCost, setSuppliesCost] = useState(0);\n  const [laborCost, setLaborCost] = useState(0);\n  const [totalCalculatedCost, setTotalCalculatedCost] = useState(0);\n\n  // States for saving products\n  const [savedProducts, setSavedProducts] = useState<SavedProduct[]>([]);\n  const [productName, setProductName] = useState(\"\");\n  const [productDescription, setProductDescription] = useState(\"\");\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n  const [currentEditingProduct, setCurrentEditingProduct] = useState<string | null>(null);\n\n  // Load saved products from localStorage on component mount\n  useEffect(() => {\n    const saved = localStorage.getItem('savedProducts');\n    if (saved) {\n      try {\n        setSavedProducts(JSON.parse(saved));\n      } catch (error) {\n        console.error('Error loading saved products:', error);\n      }\n    }\n  }, []);\n\n  // Calculate costs whenever supplies or labor change\n  useEffect(() => {\n    const suppliesTotal = supplies.reduce((total, supply) => {\n      const quantity = parseFloat(supply.quantity) || 0;\n      const unitCost = parseFloat(supply.unitCost) || 0;\n      return total + (quantity * unitCost);\n    }, 0);\n    \n    const laborTotal = (parseFloat(laborHours) || 0) * (parseFloat(hourlyRate) || 0);\n    const totalCost = suppliesTotal + laborTotal;\n    \n    setSuppliesCost(suppliesTotal);\n    setLaborCost(laborTotal);\n    setTotalCalculatedCost(totalCost);\n  }, [supplies, laborHours, hourlyRate]);\n\n  // Save products to localStorage\n  const saveToLocalStorage = (products: SavedProduct[]) => {\n    try {\n      localStorage.setItem('savedProducts', JSON.stringify(products));\n    } catch (error) {\n      console.error('Error saving products:', error);\n    }\n  };\n\n  // Add new supply\n  const addSupply = () => {\n    const newSupply: Supply = {\n      id: Date.now().toString(),\n      name: \"\",\n      quantity: \"\",\n      unitCost: \"\",\n      unit: \"un\"\n    };\n    setSupplies([...supplies, newSupply]);\n  };\n\n  // Update supply\n  const updateSupply = (id: string, field: keyof Supply, value: string) => {\n    setSupplies(supplies.map(supply => \n      supply.id === id ? { ...supply, [field]: value } : supply\n    ));\n  };\n\n  // Remove supply\n  const removeSupply = (id: string) => {\n    setSupplies(supplies.filter(supply => supply.id !== id));\n  };\n\n  // Save current product\n  const saveProduct = () => {\n    if (!productName.trim()) {\n      setError(\"Por favor, insira um nome para o produto.\");\n      return;\n    }\n\n    const now = new Date().toISOString();\n    const productData: SavedProduct = {\n      id: currentEditingProduct || Date.now().toString(),\n      name: productName.trim(),\n      description: productDescription.trim(),\n      supplies: supplies,\n      laborHours,\n      hourlyRate,\n      suppliesCost,\n      laborCost,\n      totalCost: totalCalculatedCost,\n      margin,\n      finalPrice: price || 0,\n      createdAt: currentEditingProduct ? \n        savedProducts.find(p => p.id === currentEditingProduct)?.createdAt || now : now,\n      updatedAt: now\n    };\n\n    let updatedProducts;\n    if (currentEditingProduct) {\n      updatedProducts = savedProducts.map(p => \n        p.id === currentEditingProduct ? productData : p\n      );\n    } else {\n      updatedProducts = [...savedProducts, productData];\n    }\n\n    setSavedProducts(updatedProducts);\n    saveToLocalStorage(updatedProducts);\n    setShowSaveDialog(false);\n    setProductName(\"\");\n    setProductDescription(\"\");\n    setCurrentEditingProduct(null);\n    setError(\"\");\n  };\n\n  // Load product into calculator\n  const loadProduct = (product: SavedProduct) => {\n    setSupplies(product.supplies);\n    setLaborHours(product.laborHours);\n    setHourlyRate(product.hourlyRate);\n    setMargin(product.margin);\n    setPrice(product.finalPrice);\n    setUseCalculatedCost(true);\n    setCurrentEditingProduct(product.id);\n  };\n\n  // Delete product\n  const deleteProduct = (productId: string) => {\n    const updatedProducts = savedProducts.filter(p => p.id !== productId);\n    setSavedProducts(updatedProducts);\n    saveToLocalStorage(updatedProducts);\n    \n    if (currentEditingProduct === productId) {\n      setCurrentEditingProduct(null);\n    }\n  };\n\n  // Duplicate product\n  const duplicateProduct = (product: SavedProduct) => {\n    const duplicatedProduct: SavedProduct = {\n      ...product,\n      id: Date.now().toString(),\n      name: `${product.name} (Cópia)`,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n\n    const updatedProducts = [...savedProducts, duplicatedProduct];\n    setSavedProducts(updatedProducts);\n    saveToLocalStorage(updatedProducts);\n  };\n\n  // Calculate final selling price\n  const handleCalculate = () => {\n    setError(\"\");\n    const costValue = useCalculatedCost ? totalCalculatedCost : parseFloat(manualCost);\n    const marginValue = parseFloat(margin);\n\n    // Validate numeric values\n    if (isNaN(costValue) || isNaN(marginValue)) {\n      setError(\"Por favor, insira valores numéricos válidos para custo e margem.\");\n      setPrice(null);\n      return;\n    }\n\n    if (costValue < 0 || marginValue < 0) {\n      setError(\"Os valores devem ser positivos.\");\n      setPrice(null);\n      return;\n    }\n\n    // Calculation: final price = cost * (1 + margin/100)\n    const calculatedPrice = costValue * (1 + marginValue / 100);\n    setPrice(calculatedPrice);\n  };\n\n  const handleReset = () => {\n    setSupplies([]);\n    setLaborHours(\"\");\n    setHourlyRate(\"\");\n    setManualCost(\"\");\n    setMargin(\"\");\n    setPrice(null);\n    setError(\"\");\n    setUseCalculatedCost(true);\n    setCurrentEditingProduct(null);\n    setProductName(\"\");\n    setProductDescription(\"\");\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Tabs defaultValue=\"cost-calculation\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"cost-calculation\">Cálculo de Custo</TabsTrigger>\n          <TabsTrigger value=\"final-pricing\">Precificação Final</TabsTrigger>\n          <TabsTrigger value=\"saved-products\">Produtos Salvos ({savedProducts.length})</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"cost-calculation\" className=\"space-y-6\">\n          {/* Supplies Section */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Insumos e Materiais</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {supplies.map((supply) => (\n                <div key={supply.id} className=\"grid grid-cols-12 gap-2 items-end\">\n                  <div className=\"col-span-4\">\n                    <Label className=\"text-xs\">Nome do Insumo</Label>\n                    <Input\n                      placeholder=\"Ex: Farinha\"\n                      value={supply.name}\n                      onChange={(e) => updateSupply(supply.id, \"name\", e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-span-2\">\n                    <Label className=\"text-xs\">Qtd</Label>\n                    <Input\n                      type=\"number\"\n                      step=\"0.01\"\n                      placeholder=\"1.5\"\n                      value={supply.quantity}\n                      onChange={(e) => updateSupply(supply.id, \"quantity\", e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-span-2\">\n                    <Label className=\"text-xs\">Unidade</Label>\n                    <Input\n                      placeholder=\"kg\"\n                      value={supply.unit}\n                      onChange={(e) => updateSupply(supply.id, \"unit\", e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-span-3\">\n                    <Label className=\"text-xs\">Custo Unit. (R$)</Label>\n                    <Input\n                      type=\"number\"\n                      step=\"0.01\"\n                      placeholder=\"5.00\"\n                      value={supply.unitCost}\n                      onChange={(e) => updateSupply(supply.id, \"unitCost\", e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-span-1\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => removeSupply(supply.id)}\n                      className=\"text-red-600 hover:text-red-700\"\n                    >\n                      ×\n                    </Button>\n                  </div>\n                </div>\n              ))}\n              \n              <Button onClick={addSupply} variant=\"outline\" className=\"w-full\">\n                + Adicionar Insumo\n              </Button>\n              \n              {supplies.length > 0 && (\n                <div className=\"text-right text-sm font-medium\">\n                  Total Insumos: R$ {suppliesCost.toFixed(2)}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Labor Section */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Mão de Obra</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"labor-hours\" className=\"text-sm font-medium\">\n                    Horas Trabalhadas\n                  </Label>\n                  <Input\n                    id=\"labor-hours\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    placeholder=\"Ex: 2.5\"\n                    value={laborHours}\n                    onChange={(e) => setLaborHours(e.target.value)}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"hourly-rate\" className=\"text-sm font-medium\">\n                    Valor por Hora (R$)\n                  </Label>\n                  <Input\n                    id=\"hourly-rate\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    placeholder=\"Ex: 25.00\"\n                    value={hourlyRate}\n                    onChange={(e) => setHourlyRate(e.target.value)}\n                  />\n                </div>\n              </div>\n              \n              {(laborHours || hourlyRate) && (\n                <div className=\"text-right text-sm font-medium\">\n                  Total Mão de Obra: R$ {laborCost.toFixed(2)}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Cost Summary */}\n          {(supplies.length > 0 || laborHours || hourlyRate) && (\n            <Card className=\"bg-blue-50 dark:bg-blue-950/20 border-blue-200 dark:border-blue-800\">\n              <CardContent className=\"pt-6\">\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Custo dos Insumos:</span>\n                    <span>R$ {suppliesCost.toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Custo da Mão de Obra:</span>\n                    <span>R$ {laborCost.toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between font-bold text-base border-t pt-2\">\n                    <span>Custo Total Calculado:</span>\n                    <span>R$ {totalCalculatedCost.toFixed(2)}</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"final-pricing\" className=\"space-y-6\">\n          {/* Cost Selection */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Custo do Produto</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"radio\"\n                    id=\"use-calculated\"\n                    checked={useCalculatedCost}\n                    onChange={() => setUseCalculatedCost(true)}\n                  />\n                  <Label htmlFor=\"use-calculated\" className=\"text-sm\">\n                    Usar custo calculado: R$ {totalCalculatedCost.toFixed(2)}\n                  </Label>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"radio\"\n                    id=\"use-manual\"\n                    checked={!useCalculatedCost}\n                    onChange={() => setUseCalculatedCost(false)}\n                  />\n                  <Label htmlFor=\"use-manual\" className=\"text-sm\">\n                    Inserir custo manualmente\n                  </Label>\n                </div>\n                \n                {!useCalculatedCost && (\n                  <Input\n                    type=\"number\"\n                    step=\"0.01\"\n                    placeholder=\"Ex: 50.00\"\n                    value={manualCost}\n                    onChange={(e) => setManualCost(e.target.value)}\n                    className=\"mt-2\"\n                  />\n                )}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Margin and Final Calculation */}\n          <div className=\"flex flex-col\">\n            <Label htmlFor=\"margin\" className=\"mb-2 text-sm font-medium\">\n              Margem de Lucro (%)\n            </Label>\n            <Input\n              id=\"margin\"\n              type=\"number\"\n              step=\"0.1\"\n              min=\"0\"\n              placeholder=\"Ex: 30\"\n              value={margin}\n              onChange={(e) => setMargin(e.target.value)}\n              aria-invalid={!!error}\n            />\n          </div>\n\n          {error && (\n            <div className=\"text-sm text-red-600 bg-red-50 dark:bg-red-950/20 p-3 rounded-md border border-red-200 dark:border-red-800\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"flex gap-3\">\n            <Button onClick={handleCalculate} className=\"flex-1\">\n              Calcular Preço de Venda\n            </Button>\n            <Button onClick={handleReset} variant=\"outline\" className=\"flex-1\">\n              Limpar Tudo\n            </Button>\n          </div>\n\n          {price !== null && (\n            <div className=\"mt-6 rounded-lg border border-green-200 dark:border-green-800 p-4 bg-green-50 dark:bg-green-950/20\">\n              <div className=\"text-center\">\n                <span className=\"block text-sm font-medium text-green-800 dark:text-green-200 mb-1\">\n                  Preço de Venda Sugerido\n                </span>\n                <span className=\"block text-2xl font-bold text-green-900 dark:text-green-100\">\n                  R$ {price.toFixed(2)}\n                </span>\n                <div className=\"mt-3 text-xs text-green-700 dark:text-green-300 space-y-1\">\n                  <div>Custo: R$ {(useCalculatedCost ? totalCalculatedCost : parseFloat(manualCost) || 0).toFixed(2)}</div>\n                  <div>Margem: {parseFloat(margin || \"0\").toFixed(1)}%</div>\n                  <div>Lucro: R$ {(price - (useCalculatedCost ? totalCalculatedCost : parseFloat(manualCost) || 0)).toFixed(2)}</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default PricingForm;\n"],"names":[],"mappings":"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","debugId":null}}]
}